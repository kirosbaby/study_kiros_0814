python +selenium+unittest 进行封装框架
配置路径和用户信息把包
存放登录数据的包
公共模块的包--业务相关的包----工具类
存放用例和报告的包
main----全局执行用例

这样做的作用：元素定位和定位方法，用例，报告，其他数据，进行分类管理
                     实现一个解耦的作用，方便维护，提高工作效率

结合业务说说----登录（流水账 /把登录封装起来，作为公共方法，方便后面调用）
                   ---模块---click-用户列表--，iframe,创建-- （必填参数，send_keys,下拉选项，)，---------------提交
	返回列表--查看---断言
               修改-----列表---断言











我使用PO设计模式结合Python中的selenium及unittest框架进行UI自动化开发。
PO设计模式将页面元素、定位方法、测试用例封装起来，实现了测试用例的分层管理
，体现了面向对象的基本思想，实现了松耦合。PO框架由存放页面元素、文件读取等的配置包、封装基本API方法、
元素定位方法的公共包以及封装测试用例的用例包，和存放报告、数据等的数据包、报告包。





我使用PO设计模式、和单例模式 结合Python中的selenium及unittest框架进行UI自动化开发。
PO设计模式将页面元素、定位方法、测试用例封装起来，实现了测试用例的分层管理
，体现了面向对象的基本思想，实现了松耦合。PO框架由存放页面元素、文件读取等的配置包、封装基本API方法、
元素定位方法的公共包以及封装测试用例的用例包，和存放报告、数据等的数据包、报告包。
单例模式---把登录时打开的浏览器对象，设置为全局唯一的对象，供后面的方法调用（定位元素，输入值，切换句柄）
	保证我们登录的唯一性


下面我大概说一下如何实现：首先登录系统，
调用find_element_by_id方法进行用户名和密码输入框定位，
然后使用send_keys()方法输入用户名和密码，定位并click()登录按钮后转入登录后界面，
assert_equal进行页面标题断言，判断是否登录成功。进行线索管理时，
click点击线索管理按钮，新开页面跳转至线索管理首页，switch_window_handle切换句柄后
，使用id进行元素定位并点击相应功能，然后跳转入对应界面，比如线索添加，
id定位元素并send_keys进行输入，最后click提交即可。
提交后执行quit()方法关闭线索管理界面，回到销售专员端首页，
id定位并click点击商机管理按钮，新开页面跳转入商机管理界面，
切换句柄后即可对商机管理界面进行操作。其他功能大概也是这个样子。







总：




PO模式


1、框架（组成--作用）
2、业务（穿插到框架去）


1、框架（组成--作用）
2、业务（url--id登录-send_keys.用户名-send_keys.用户名-登录，结合业务--
用户管理（name）,新页面（句柄），send_keys）


1、unittest(组成--作用)
2、业务（url--id登录-send_keys----流水）



发现什么问题：（系统、业务上----操作问题）
1、加载太快，太慢
2、有时候会拿动态ID来定位
3、输入里面包含子输入框，定位不到
4、定位元素的层级比较深的，需要多次定位
5、







结合你的项目讲讲你的自动化如何实现的？
1）结合一个实际业务场景讲解（投资流程、借款流程、充值流程等）
2）讲解过程中需要注意
       要有关键字使用的比较和使用的区别
       整个过程需要注意使用断言和等待（机械式等待、隐形等待、显性等待）
我之前项目执行自动化的时候一般是这样的，先分析自动化需求，再输出自动化测试计划，然后根据自动化测试计划选择自动化测试工具及搭建好自动化环境，我们当时是用rf自动化测试工具的，接着编写用例的测试脚本，然后执行用例的测试脚本，最后就是分析测试结果，编写总结测试报告，这就是之前我在公司自动化测试的一个整体流程
下面就拿我的之前做的青鱼金融的项目来讲吧，在测试个人中心登录环节时，用open browser打开青鱼金融网页，然后通过maximize browser window对浏览进行最大化处理，避免页面中元素定位后无法点击报错的现象，确保用例执行的准确性，click element点击登录，随后会跳出一个登录弹框，因为有时候用例执行太快，而网页加载太慢会导致报错，所以我一般都会用sleep等待2秒，确保页面加载完成后再执行下一步，提高效率。因为登陆框是一个iframe弹框，所以我先select frame进入弹框，之后提取input text和input password，这两种都是输入文本值的方式，根据标签类型来选择，用input text输入账号，input password输入密码，这时候，我一般会把账号和密码设置成scalar变量，方便后续测边界值，然后click button点击登录，最后用Unselect frame退出弹框，最后用should contain断言方法，保证在案例层执行时候的准确性，在这里的话我分享个问题哈，因为做出借项目的时候涉及到第三方资金存管，刚开始登录成功的时候会跳出弹框，为了方便测试我在写用例的时候id定位的方法设计了click element自动点击取消绑定，当我注册了银行存管账户并绑定了银行卡，再去测试在执行个人中心的其他功能的用例的时候登录之后就无法执行下一步，一直报错位置无法找到，试了CSS定位和Xpath定位都不行，后来通过日志对步骤一步步进行排查后发现这个问题，最后把那个步骤删除后就可以正常执行了。接下来的话是测试我要出借这个模块出借的流程，因为之前已经对登录流程进行了封装，所以我直接调用就可以了，因为出借的项目是一个隐藏列表，用mouse over把鼠标停在定位的位置上，之后用id定位‘车抵贷’，选定出借的项目，用clik button点击立即出借，随后会跳转到出借的页面，这时候我会用wait until page contains等窗口加载完成确定包含有title信息后再进行下一步，这里不用sleep是因为sleep等待的时间太死板，遇到网络太慢的情况很容易报错，然后同时我会用select window并get title信息进行窗口间的切换，不然鼠标停留在上一个页面，无法执行下一步操作，之后是输入金额，为了避免频繁输入金额，所以在之前的时候就在pycharm里用类的方法定义了自动填写金额的关键字，我这边直接调用就行了，click button点击授权操作，然后核对信息，因为选择支付卡号这边是单选框，所以我用select radio button对所选的卡号进行定位选择，之后input password输入支付密码，click element点击确定出借，这时候会出来一个alert的确定弹框，这里闹了个大乌龙，执行到最后一个确定的时候一直无法点击，也查看了源代码，并不是iframe弹框，最后发现是因为调用了confrim弹框封装里的点击确定方法，里面只有choose ok on next confirmation和confrimaction进行点击确定，少了alter should bepresent进行再次确定，后来重新调用了alter的封装就可以了。然后用xpath定位资金管理查收益时一直无法定位，后来放弃了在原位置定位，用mouse over的方法在个人中心隐藏列表中定位到资金管理进行收益查询。最后说一下在整个流程中所涉及到的数据库表，用Connect To Database连接数据库，查看出借项目产品信息有‘loan_product_information_table’（出借产品信息表）、客户注册时有‘loan_customer_information_table’（出借客户信息表）、查看收益时有‘loan_yield_statistics_table’（出借资金收益表），查看完之后用DisconnectFrom Database退出数据库。
  
  
  
  
  
  
  
  
  
  
  
我讲下我之前做过的自动化项目叫一点钱，在此次项目中我负责前端界面的用户注册，我要投资和我要借款模块。
在对需求进行评审，以及对测试的场景和工具进行选择后，我根据评审后的需求文档在RF-ride里进行用例的编写。
为了方便后期维护和调用，会通过对此次关键字的提取，然后进行定义和封装。
首先open browser打开浏览器之后用maximize browserwindow窗口最大化
（为了获取页面的所有元素，确保页面中的所有元素都能被点击到）
讲下这里常出现的问题，当我通过click element跳转我要投资运行可能会出现报错，
原因是ride运行太快，页面反应速度更不上，
这时我会通过sleep停留两秒保证运行的正确性）
在首页界面中注册这块有用户手机号码，账号密码，验证码，马上注册。
 这些都是输入框，对应的关键字定位分别是input text input passdword 用select radiobutton关键字定位，
获取短信验证码，注册协议是个复选框，可以用select checkbox关键字定位，
注册是个按钮 我通过直接用 click button点击完成一个注册用户的流程。
进入首页后会弹出个存管账户，需要注册第三方的存管账户。
之后进入首页会有个风险提示框 我直接用xpath关键字进行定位 点击我知道了
（click element或者click button）之后调用登录时会很方便。
进入首页后，就能跳转到我要投资和我要借款模块了选择标的类型是一个按钮出借的流程
，因为之前已经对登录流程进行了封装，所以我直接调用就可以了。
因为投资是一个隐藏列表，用mouse over把鼠标停在定位的位置上，
之后用id定位‘优选自助出借’，选定投资的项目，用clik button点击我要投资，
随后会跳转到投资的页面，这时候我会用wait until page contains等窗口加载完成确定包含有title信息后再进行下一步。 
直接通过xpath接绝对路径定位标的项目类型进行选择投资，页面跳转后 在输入框输入投资金额 input text，
然后风险提示书是一个复选框用select checkbox进行选择后。Click button点击我要投资。
这就是整个自动化投资流程。
最后说一下在整个流程中所涉及到的数据库表，用Connect To Database连接数据库，
查看出借项目产品信息有‘investment_product_information_table’（投资产品信息表）、
客户注册时有_customer_information_table’（客户信息表）、
查看收益时有‘income_statement_investment_table’（投资金收益表）
，查看完之后用DisconnectFrom Database退出数据库。












总分总





RF 实现UI自动化------通过三层封装--元素，流程，案例----管理代码，维护代码，降低维护成本，提高效率------关键字，流程和用例分离----


结合业务：

登录--（input text,password）--click,  登录---主页（断言title）-----商品列表,滚动条--- ，挑选商品（sku）---点击添加购物车---断言文本，金额，数量，尺寸，，，，支付---产看订单，













接口基础知识回顾
抓包fiddler--f12
postman









